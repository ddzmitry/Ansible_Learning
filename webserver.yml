---
- hosts: webserver
  become: true
  tasks:
     - name: install web components
       apt: name={{item}} state=present update_cache=yes
       # will fire of foreach on withitems by passing item param to be installed
       with_items:
              - apache2
              - libapache2-mod-wsgi
              - python-pip
              - python-virtualenv
 
     - name: Allow all access to tcp port 80
       ufw:
         rule: allow
         port: 80
         proto: tcp
 
     - name: ensure apache2 started
       service: name=apache2 state=started enabled=yes
 
     - name: ensure mod_wsgi enabled
       apache2_module: state=present name=wsgi
       # Notify handler so server will be restarted after  wsgi was enabled
       notify: restart apache2

     - name: copy demo app source 
       copy: src=demo/app/ dest=/var/www/demo mode=0755
       notify: restart apache2
     
     - name: copy apache virtuL host config
       copy: src=demo/demo.conf dest=/etc/apache2/sites-available mode=0755
       notify: restart apache2
     
     - name: setup python virtual enviroment
       pip: requirements=/var/www/demo/requirements.txt virtualenv=/var/www/demo/.venv
       notify: restart apache2
     
     - name: de-activate default apache site
       # state absent will delete the file from directory
       file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
       notify: restart apache2
     
     # Now apache has no site configs
     - name: activate demo apache site
       # Linking new configs
       file: src=/etc/apache2/sites-available/demo.conf dest=/etc/apache2/sites-enabled/demo.conf state=link
       notify: restart apache2  
     
 
  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
